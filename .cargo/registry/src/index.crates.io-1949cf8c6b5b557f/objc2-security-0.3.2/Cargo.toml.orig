# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-security"
version.workspace = true
description = "Bindings to the Security framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
libc = { workspace = true, optional = true }
objc2 = { workspace = true, optional = true, features = ["std"] }
objc2-core-foundation = { workspace = true }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]

[features]
default = [
    "std",
    "AuthSession",
    "Authorization",
    "AuthorizationDB",
    "AuthorizationPlugin",
    "AuthorizationTags",
    "CMSDecoder",
    "CMSEncoder",
    "CSCommon",
    "CipherSuite",
    "CodeSigning",
    "SecACL",
    "SecAccess",
    "SecAccessControl",
    "SecAsn1Coder",
    "SecAsn1Templates",
    "SecAsn1Types",
    "SecBase",
    "SecCertificate",
    "SecCertificateOIDs",
    "SecCode",
    "SecCodeHost",
    "SecCustomTransform",
    "SecDecodeTransform",
    "SecDigestTransform",
    "SecEncodeTransform",
    "SecEncryptTransform",
    "SecIdentity",
    "SecIdentitySearch",
    "SecImportExport",
    "SecItem",
    "SecKey",
    "SecKeychain",
    "SecKeychainItem",
    "SecKeychainSearch",
    "SecPolicy",
    "SecPolicySearch",
    "SecProtocolMetadata",
    "SecProtocolObject",
    "SecProtocolOptions",
    "SecProtocolTypes",
    "SecRandom",
    "SecReadTransform",
    "SecRequirement",
    "SecSharedCredential",
    "SecSignVerifyTransform",
    "SecStaticCode",
    "SecTask",
    "SecTransform",
    "SecTransformReadTransform",
    "SecTrust",
    "SecTrustSettings",
    "SecTrustedApplication",
    "SecureDownload",
    "SecureTransport",
    "bitflags",
    "block2",
    "certextensions",
    "cssm",
    "cssmaci",
    "cssmapi",
    "cssmapple",
    "cssmcli",
    "cssmconfig",
    "cssmcspi",
    "cssmdli",
    "cssmerr",
    "cssmkrapi",
    "cssmkrspi",
    "cssmspi",
    "cssmtpi",
    "cssmtype",
    "eisl",
    "emmspi",
    "emmtype",
    "libc",
    "mds",
    "mds_schema",
    "objc2",
    "oids",
    "oidsalg",
    "oidsattr",
    "oidsbase",
    "oidscert",
    "oidscrl",
    "x509defs",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
libc = ["dep:libc"]
objc2 = [
    "dep:objc2",
    "objc2-core-foundation/objc2",
]
unstable-darwin-objc = []

AuthSession = ["bitflags"]
Authorization = ["bitflags"]
AuthorizationDB = [
    "objc2-core-foundation/CFBundle",
    "objc2-core-foundation/CFDictionary",
]
AuthorizationPlugin = [
    "bitflags",
    "objc2-core-foundation/CFArray",
]
AuthorizationTags = []
CMSDecoder = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
]
CMSEncoder = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
]
CSCommon = ["bitflags"]
CipherSuite = []
CodeSigning = []
SecACL = [
    "bitflags",
    "objc2-core-foundation/CFArray",
]
SecAccess = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFError",
]
SecAccessControl = [
    "bitflags",
    "objc2-core-foundation/CFError",
]
SecAsn1Coder = []
SecAsn1Templates = []
SecAsn1Types = []
SecBase = []
SecCertificate = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
SecCertificateOIDs = []
SecCode = [
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
    "objc2-core-foundation/CFURL",
]
SecCodeHost = [
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFURL",
]
SecCustomTransform = ["objc2-core-foundation/CFError"]
SecDecodeTransform = ["objc2-core-foundation/CFError"]
SecDigestTransform = ["objc2-core-foundation/CFError"]
SecEncodeTransform = ["objc2-core-foundation/CFError"]
SecEncryptTransform = ["objc2-core-foundation/CFError"]
SecIdentity = ["objc2-core-foundation/CFArray"]
SecIdentitySearch = []
SecImportExport = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDictionary",
]
SecItem = ["objc2-core-foundation/CFDictionary"]
SecKey = [
    "bitflags",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
SecKeychain = [
    "bitflags",
    "objc2-core-foundation/CFArray",
]
SecKeychainItem = ["objc2-core-foundation/CFData"]
SecKeychainSearch = []
SecPolicy = ["objc2-core-foundation/CFDictionary"]
SecPolicySearch = []
SecProtocolMetadata = []
SecProtocolObject = []
SecProtocolOptions = []
SecProtocolTypes = ["objc2-core-foundation/CFArray"]
SecRandom = []
SecReadTransform = []
SecRequirement = [
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFError",
]
SecSharedCredential = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFError",
]
SecSignVerifyTransform = [
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFError",
]
SecStaticCode = [
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
    "objc2-core-foundation/CFURL",
]
SecTask = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
SecTransform = [
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
SecTransformReadTransform = ["objc2-core-foundation/CFStream"]
SecTrust = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
SecTrustSettings = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
]
SecTrustedApplication = ["objc2-core-foundation/CFData"]
SecureDownload = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDate",
    "objc2-core-foundation/CFURL",
]
SecureTransport = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFData",
]
certextensions = []
cssm = []
cssmaci = []
cssmapi = []
cssmapple = []
cssmcli = []
cssmconfig = []
cssmcspi = []
cssmdli = []
cssmerr = []
cssmkrapi = []
cssmkrspi = []
cssmspi = []
cssmtpi = []
cssmtype = []
eisl = []
emmspi = []
emmtype = []
mds = []
mds_schema = []
oids = []
oidsalg = []
oidsattr = []
oidsbase = []
oidscert = []
oidscrl = []
x509defs = []
